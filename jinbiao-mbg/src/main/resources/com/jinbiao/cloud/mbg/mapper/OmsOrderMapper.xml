<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jinbiao.cloud.mbg.mapper.OmsOrderMapper">
  <resultMap id="BaseResultMap" type="com.jinbiao.cloud.mbg.model.OmsOrder">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="member_name" jdbcType="VARCHAR" property="memberName" />
    <result column="member_id" jdbcType="INTEGER" property="memberId" />
    <result column="case_id" jdbcType="INTEGER" property="caseId" />
    <result column="product_id" jdbcType="INTEGER" property="productId" />
    <result column="received_id" jdbcType="INTEGER" property="receivedId" />
    <result column="received_name" jdbcType="VARCHAR" property="receivedName" />
    <result column="received_address" jdbcType="VARCHAR" property="receivedAddress" />
    <result column="version" jdbcType="INTEGER" property="version" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, member_name, member_id, case_id, product_id, received_id, received_name, received_address, 
    version
  </sql>
  <select id="selectByExample" parameterType="com.jinbiao.cloud.mbg.model.OmsOrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from oms_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from oms_order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from oms_order
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jinbiao.cloud.mbg.model.OmsOrderExample">
    delete from oms_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jinbiao.cloud.mbg.model.OmsOrder">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into oms_order (member_name, member_id, case_id, 
      product_id, received_id, received_name, 
      received_address, version)
    values (#{memberName,jdbcType=VARCHAR}, #{memberId,jdbcType=INTEGER}, #{caseId,jdbcType=INTEGER}, 
      #{productId,jdbcType=INTEGER}, #{receivedId,jdbcType=INTEGER}, #{receivedName,jdbcType=VARCHAR}, 
      #{receivedAddress,jdbcType=VARCHAR}, #{version,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.jinbiao.cloud.mbg.model.OmsOrder">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into oms_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="memberName != null">
        member_name,
      </if>
      <if test="memberId != null">
        member_id,
      </if>
      <if test="caseId != null">
        case_id,
      </if>
      <if test="productId != null">
        product_id,
      </if>
      <if test="receivedId != null">
        received_id,
      </if>
      <if test="receivedName != null">
        received_name,
      </if>
      <if test="receivedAddress != null">
        received_address,
      </if>
      <if test="version != null">
        version,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="memberName != null">
        #{memberName,jdbcType=VARCHAR},
      </if>
      <if test="memberId != null">
        #{memberId,jdbcType=INTEGER},
      </if>
      <if test="caseId != null">
        #{caseId,jdbcType=INTEGER},
      </if>
      <if test="productId != null">
        #{productId,jdbcType=INTEGER},
      </if>
      <if test="receivedId != null">
        #{receivedId,jdbcType=INTEGER},
      </if>
      <if test="receivedName != null">
        #{receivedName,jdbcType=VARCHAR},
      </if>
      <if test="receivedAddress != null">
        #{receivedAddress,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jinbiao.cloud.mbg.model.OmsOrderExample" resultType="java.lang.Long">
    select count(*) from oms_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update oms_order
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.memberName != null">
        member_name = #{record.memberName,jdbcType=VARCHAR},
      </if>
      <if test="record.memberId != null">
        member_id = #{record.memberId,jdbcType=INTEGER},
      </if>
      <if test="record.caseId != null">
        case_id = #{record.caseId,jdbcType=INTEGER},
      </if>
      <if test="record.productId != null">
        product_id = #{record.productId,jdbcType=INTEGER},
      </if>
      <if test="record.receivedId != null">
        received_id = #{record.receivedId,jdbcType=INTEGER},
      </if>
      <if test="record.receivedName != null">
        received_name = #{record.receivedName,jdbcType=VARCHAR},
      </if>
      <if test="record.receivedAddress != null">
        received_address = #{record.receivedAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.version != null">
        version = #{record.version,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update oms_order
    set id = #{record.id,jdbcType=INTEGER},
      member_name = #{record.memberName,jdbcType=VARCHAR},
      member_id = #{record.memberId,jdbcType=INTEGER},
      case_id = #{record.caseId,jdbcType=INTEGER},
      product_id = #{record.productId,jdbcType=INTEGER},
      received_id = #{record.receivedId,jdbcType=INTEGER},
      received_name = #{record.receivedName,jdbcType=VARCHAR},
      received_address = #{record.receivedAddress,jdbcType=VARCHAR},
      version = #{record.version,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jinbiao.cloud.mbg.model.OmsOrder">
    update oms_order
    <set>
      <if test="memberName != null">
        member_name = #{memberName,jdbcType=VARCHAR},
      </if>
      <if test="memberId != null">
        member_id = #{memberId,jdbcType=INTEGER},
      </if>
      <if test="caseId != null">
        case_id = #{caseId,jdbcType=INTEGER},
      </if>
      <if test="productId != null">
        product_id = #{productId,jdbcType=INTEGER},
      </if>
      <if test="receivedId != null">
        received_id = #{receivedId,jdbcType=INTEGER},
      </if>
      <if test="receivedName != null">
        received_name = #{receivedName,jdbcType=VARCHAR},
      </if>
      <if test="receivedAddress != null">
        received_address = #{receivedAddress,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jinbiao.cloud.mbg.model.OmsOrder">
    update oms_order
    set member_name = #{memberName,jdbcType=VARCHAR},
      member_id = #{memberId,jdbcType=INTEGER},
      case_id = #{caseId,jdbcType=INTEGER},
      product_id = #{productId,jdbcType=INTEGER},
      received_id = #{receivedId,jdbcType=INTEGER},
      received_name = #{receivedName,jdbcType=VARCHAR},
      received_address = #{receivedAddress,jdbcType=VARCHAR},
      version = #{version,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>