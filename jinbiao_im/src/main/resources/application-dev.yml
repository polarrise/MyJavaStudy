#本地选择开启swagger
swagger:
  enabled: true

server:
  #(改)启动端口，一台服务器唯一
  port: 8010
  #(改)应用上下文，统一用/tps-local
  servlet:
    context-path: /jinbiao-cool

spring:
  application:
    #(改)项目名称，建议使用hsa-tps-local，和包名一致
    name: jinbiao-cool
  datasource:
    username: root
    password: 123456
    url: jdbc:mysql://127.0.0.1:3306/xiaofa_lawyer?connectTimeout=1000000&socketTimeout=3000000&autoReconnect=true&useSSL=false&useUnicode=true&characterEncoding=UTF-8&serverTimezone=GMT%2B8&allowMultiQueries=true
    driver-class-name: com.mysql.jdbc.Driver

  redis:
    host: 127.0.0.1 # Redis服务器地址
    database: 0 # Redis数据库索引（默认为0）
    port: 6379 # Redis服务器连接端口
    password:  # Redis服务器连接密码（默认为空）
    timeout: 1000ms # 连接超时时间（毫秒）
    lettuce:
      pool:
        max-active: 100           # 默认8
        max-wait: 500ms           # 负值表示没有限制
        max-idle: 80              # 连接池最大空闲连接  默认8
        min-idle: 20              # 连接池最小空闲连接  默认 0

  kafka:
    im-topic-name: IM_T001_DEV
    bootstrap-servers: 127.0.0.1:9092
    listener:
      type: batch               # 批量消费
      concurrency: 1            # 并发数
      poll-timeout: 500         # 轮询消费者时使用的超时（以毫秒为单位）
    producer:
      retries: 3                # 重试次数
      batch-size: 16384         # 批量发送的消息数量
      buffer-memory: 33554432   # 32MB的批处理缓冲区
      acks: 1
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      group-id: IM_G001_DEV             # 默认消费者组
      auto-offset-reset: earliest       # 最早未被消费的offset
      max-poll-records: 100             # 批量一次最大拉取数据量
      auto-commit-interval: 100         # 如果'enable.auto.commit'为true，则消费者偏移自动提交给Kafka的频率（以毫秒为单位），默认值为5000。
      enable-auto-commit: true
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

sign:   # 签名的过期时间60s
  maxTime: 180

service:
  version: 1.0.0

mybatis:
  mapper-locations: classpath:mapping/*Mapper.xml
  type-aliases-package: com.powersi.entity
  #设置sql打印
  configuration:
    database-id: ${mybatis.database.provider.type:mysql}
#    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    #设置驼峰命名法
    map-underscore-to-camel-case: true

# webSocket启动端口
im:
  server:
    port: 40002                #套接字端口
    allIdleTimeSeconds: 180    #所有类型的空闲超时时间,所有类型的空闲超时时间设定，包括读空闲和写空闲
    readerIdleTimeSeconds: 7   #读空闲超时时间
    writerIdleTimeSeconds: 3   #写空闲超时时间

#showSql
logging:
  level:
    root: info
    com.powersi.dao: debug

#mybatis-plus打印sql信息
mybatis-plus:
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

#Dubbo provider configuration
#dubbo:
#  application:
#    name: dubbo_provider
#  protocol:
#    #(改)连接zookeeper服务地址端口，建议所有的都不一样，且记录下来
#    port: 20880
#    name: dubbo
#    version: 1.0.0
#  registry:
#    #(改)zookeeper服务地址，根据提供修改(zookeeper://IP:端口)
#    protocol: zookeeper
#    address: zookeeper://127.0.0.1:2181
#  metadata-report:
#    #(改)zookeeper服务地址，根据提供修改(zookeeper://IP:端口)
#    address: zookeeper://127.0.0.1:2181
#    #扫描注解包通过该设置将服务注册到zookeeper           dubbo.scan.base-packages=com.wzb.provider.service
#  scan:
#    base-packages: com.powersi.service
#  provider:
#    version: 1.0.0
